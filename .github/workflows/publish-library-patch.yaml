name: Publish Library Patch Version

on:
  workflow_dispatch:

jobs:
  publish-patch:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: library

    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}  # Needed for pushing changes and creating PR

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          registry-url: https://registry.npmjs.org/

      - run: npm install

      - name: Bump patch version and create branch
        run: |
          # Get current version and bump to prepatch
          new_version=$(npm version prepatch --no-git-tag-version --preid=alpha)
          echo "New version: $new_version"
          
          # Sanitize version for branch name
          sanitized_version=$(echo "$new_version" | sed 's/@tumaet\/apollon//g' | sed 's/[^a-zA-Z0-9.-]/-/g')
          branch_name="chore/version-bump-patch-${sanitized_version}"
          
          # Create and checkout new branch
          git checkout -b "$branch_name"
          
          # Configure git
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          
          # Commit changes
          git add package.json package-lock.json
          git commit -m "chore(release): bump prepatch version to $new_version"
          
          # Push new branch
          git push origin "$branch_name"
          
          # Store branch name for next step
          echo "BRANCH_NAME=$branch_name" >> $GITHUB_ENV

      - name: Build
        run: npm run build

      - name: Publish to npm
        run: npm publish --access public --tag latest
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create Pull Request
        run: |
          gh pr create \
            --base main \
            --head "${{ env.BRANCH_NAME }}" \
            --title "chore: bump patch version to ${{ env.BRANCH_NAME }}" \
            --body "Automated version bump to ${{ env.BRANCH_NAME }} and npm publish with alpha tag"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}